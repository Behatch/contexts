<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2">
    <file original="global" source-language="en" target-language="ru" datatype="plaintext">
        <header></header>
        <body>
            <!-- BrowserContext.php -->
            <trans-unit id="i-start-timing-now">
                <source>(I )start timing now</source>
                <target>(я )засекаю время</target>
            </trans-unit>
            <trans-unit id="i-set-basic-authentication">
                <source>I set basic authentication with :user and :password</source>
                <target>я устанавливаю Basic-аутентификацию с :user и :password</target>
            </trans-unit>
            <trans-unit id="i-am-on-url-composed-by">
                <source>(I )am on url composed by:</source>
                <target>(я )на адресе из:</target>
            </trans-unit>
            <trans-unit id="i-click-on-the-nth-element">
                <source>(I )click on the :index :element element</source>
                <target>(я )кликаю на :index элемент :element</target>
            </trans-unit>
            <trans-unit id="i-follow-the-nth-link">
                <source>(I )follow the :index :link link</source>
                <target>(я )кликаю по :index ссылке :link</target>
            </trans-unit>
            <trans-unit id="i-press-the-nth-button">
                <source>(I )press the :index :button button</source>
                <target>(я )нажимаю на :index кнопку :button</target>
            </trans-unit>
            <trans-unit id="i-fill-in-with-the-current-date">
                <source>(I )fill in :field with the current date</source>
                <target>(я )заполняю поле :field текущей датой</target>
            </trans-unit>
            <trans-unit id="i-fill-in-with-the-current-date-and-modifier">
                <source>(I )fill in :field with the current date and modifier :modifier</source>
                <target>(я )заполняю поле :field текущей датой с поправкой :modifier</target>
            </trans-unit>
            <trans-unit id="i-hover">
                <source>(I )hover :element</source>
                <target>(я )навожу на :element</target>
            </trans-unit>
            <trans-unit id="i-save-the-value-of-in-the-parameters">
                <source>(I )save the value of :field in the :parameter parameter</source>
                <target>(я )сохраняю значение поля :field в параметре :parameter</target>
            </trans-unit>
            <trans-unit id="i-wait-seconds-until-i-see">
                <source>(I )wait :count second(s) until I see :text</source>
                <target>(я )жду :count секунд(у)(ы) пока не увижу :text</target>
            </trans-unit>
            <trans-unit id="i-should-not-see-within-second">
                <source>(I )should not see :text within :count second(s)</source>
                <target>(я )не должен видеть :text в течение :count секунд(ы)</target>
            </trans-unit>
            <trans-unit id="i-wait-until-i-see">
                <source>(I )wait until I see :text</source>
                <target>(я )жду пока не увижу :text</target>
            </trans-unit>
            <trans-unit id="i-wait-seconds-until-i-see-in-the-element">
                <source>(I )wait :count second(s) until I see :text in the :element element</source>
                <target>(я )жду :count секунд(у)(ы) пока не увижу :text в элементе :element</target>
            </trans-unit>
            <trans-unit id="i-wait-second">
                <source>(I )wait :count second(s)</source>
                <target>(я )жду :count секунд(у)(ы)</target>
            </trans-unit>
            <trans-unit id="i-wait-until-i-see-in-the-element">
                <source>(I )wait until I see :text in the :element element</source>
                <target>(я )жду пока не увижу :text в элементе :element</target>
            </trans-unit>
            <trans-unit id="i-wait-for-element">
                <source>(I )wait for :element element</source>
                <target>(я )жду элемент :element</target>
            </trans-unit>
            <trans-unit id="i-wait-seconds-for-element">
                <source>(I )wait :count second(s) for :element element</source>
                <target>(я )жду :count секунд(у)(ы) элемент :element</target>
            </trans-unit>
            <trans-unit id="i-should-see-n-in-the-nth">
                <source><![CDATA[/^(?:|I )should see (?P<count>\d+) "(?P<element>[^"]*)" in the (?P<index>\d+)(?:st|nd|rd|th) "(?P<parent>[^"]*)"$/]]></source>
                <target><![CDATA[/^(?:|я )должен видеть (?P<count>\d+) "(?P<element>[^"]*)" в (?P<index>\d+)(?:ом|ем|м) "(?P<parent>[^"]*)"$/]]></target>
            </trans-unit>
            <trans-unit id="i-should-see-less-than-n-in-the-nth">
                <source>(I )should see less than :count :element in the :index :parent</source>
                <target>(я )должен видеть менее :count :element в :index :parent</target>
            </trans-unit>
            <trans-unit id="i-should-see-more-than-n-in-the-nth">
                <source>(I )should see more than :count :element in the :index :parent</source>
                <target>(я )должен видеть более :count :element в :index :parent</target>
            </trans-unit>
            <trans-unit id="the-element-should-be-enabled">
                <source>the element :element should be enabled</source>
                <target>элемент :element должен быть доступен</target>
            </trans-unit>
            <trans-unit id="the-element-shouls-be-disabled">
                <source>the element :element should be disabled</source>
                <target>элемент :element должен быть недоступен</target>
            </trans-unit>
            <trans-unit id="the-select-box-should-contain">
                <source>the :select select box should contain :option</source>
                <target>выпадающий список :select должен содержать :option</target>
            </trans-unit>
            <trans-unit id="the-select-box-should-not-contain">
                <source>the :select select box should not contain :option</source>
                <target>выпадающий список :select не должен содержать :option</target>
            </trans-unit>
            <trans-unit id="the-element-shouls-be-visible">
                <source>the :element element should be visible</source>
                <target>элемент :element должен быть видимым</target>
            </trans-unit>
            <trans-unit id="the-element-should-not-be-visible">
                <source>the :element element should not be visible</source>
                <target>элемент :element не должен быть видимым</target>
            </trans-unit>
            <trans-unit id="i-switch-to-iframe">
                <source>(I )switch to iframe :name</source>
                <target>(я )переключаюсь на iframe :name</target>
            </trans-unit>
            <trans-unit id="i-switch-to-frame">
                <source>(I )switch to frame :name</source>
                <target>(я )переключаюсь на фрейм :name</target>
            </trans-unit>
            <trans-unit id="i-switch-to-main-frame">
                <source>(I )switch to main frame</source>
                <target>(я )я переключаюсь на главный фрейм</target>
            </trans-unit>
            <trans-unit id="the-total-elapsed-time-should-be-than-seconds">
                <source>(the )total elapsed time should be :comparison than :expected seconds</source>
                <target>общее время должно быть :comparison чем :expected секунд(ы)(у)</target>
            </trans-unit>
            <trans-unit id="the-total-elapsed-time-should-be-to-seconds">
                <source>(the )total elapsed time should be :comparison to :expected seconds</source>
                <target>общее время должно быть :comparison :expected секунд(ы)(у)</target>
            </trans-unit>

            <!-- SystemContext.php -->
            <trans-unit id="i-put-the-file-into-field">
                <source>(I )put the file :file into :field</source>
                <target>(я )загружаю файл :file в поле :field</target>
            </trans-unit>
            <trans-unit id="i-execute">
                <source>(I )execute :command</source>
                <target>(я )выполняю :command</target>
            </trans-unit>
            <trans-unit id="i-execute-from-project-root">
                <source>(I )execute :command from project root</source>
                <target>(я )выполняю :command и корня проекта</target>
            </trans-unit>
            <trans-unit id="command-should-succeed">
                <source>command should succeed</source>
                <target>команда должна выполниться успешно</target>
            </trans-unit>
            <trans-unit id="command-should-fail">
                <source>command should fail</source>
                <target>команда должна выполниться неуспешно</target>
            </trans-unit>
            <trans-unit id="command-should-last-lett-than">
                <source>command should last less than :seconds seconds</source>
                <target>команда должна выполняться менее чем :seconds секунд(ы)(у)</target>
            </trans-unit>
            <trans-unit id="command-should-last-more-than">
                <source>command should last more than :seconds seconds</source>
                <target>команда должна выполняться более чем :seconds секунд(ы)(у)</target>
            </trans-unit>
            <trans-unit id="i-create-the-file-contening">
                <source>(I )create the file :filename containing:</source>
                <target>(я )создаю файл :filename с содержимым:</target>
            </trans-unit>
            <trans-unit id="output-should-contain">
                <source>output should contain :text</source>
                <target>вывод должен содержать :text</target>
            </trans-unit>
            <trans-unit id="output-should-not-contain">
                <source>output should not contain :text</source>
                <target>вывод не должен содержать :text</target>
            </trans-unit>
            <trans-unit id="output-should-be">
                <source>output should be:</source>
                <target>вывод должен быть:</target>
            </trans-unit>
            <trans-unit id="output-should-not-be">
                <source>output should not be:</source>
                <target>вывод не должен быть:</target>
            </trans-unit>
            <trans-unit id="print-the-content-of-file">
                <source>print the content of :filename file</source>
                <target>выведи содержимое файла :filename</target>
            </trans-unit>

            <!-- JsonContext.php -->
            <trans-unit id="the-response-should-be-in-json">
                <source>the response should be in JSON</source>
                <target>ответ должен быть в JSON</target>
            </trans-unit>
            <trans-unit id="the-response-should-not-be-in-json">
                <source>the response should not be in JSON</source>
                <target>ответ не должен быть в JSON</target>
            </trans-unit>
            <trans-unit id="the-json-node-should-be-equal-to">
                <source>the JSON node :node should be equal to :text</source>
                <target>узел JSON :node должен быть равен :text</target>
            </trans-unit>
            <trans-unit id="the-json-node-should-match">
                <source>the JSON node :node should match :pattern</source>
                <target>узел JSON :node должен соответствовать :pattern</target>
            </trans-unit>
            <trans-unit id="the-json-nodes-should-be-equal-to">
                <source>the JSON nodes should be equal to:</source>
                <target>узлы JSON должны быть равны:</target>
            </trans-unit>
            <trans-unit id="the-json-node-should-be-null">
                <source>the JSON node :node should be null</source>
                <target>узел JSON :node должен быть null</target>
            </trans-unit>
            <trans-unit id="the-json-node-should-not-be-null">
                <source>the JSON node :node should not be null</source>
                <target>узел JSON :node не должен быть null</target>
            </trans-unit>
            <trans-unit id="the-json-node-should-be-true">
                <source>the JSON node :node should be true</source>
                <target>узел JSON :node должен быть истиной</target>
            </trans-unit>
            <trans-unit id="the-json-node-should-be-false">
                <source>the JSON node :node should be false</source>
                <target>узел JSON :node должен быть ложью</target>
            </trans-unit>
            <trans-unit id="the-json-node-should-be-equal-to-the-string">
                <source>the JSON node :node should be equal to the string :text</source>
                <target>узел JSON :node должен быть равен строке :text</target>
            </trans-unit>
            <trans-unit id="the-json-node-should-be-equal-to-the-number">
                <source>the JSON node :node should be equal to the number :number</source>
                <target>узел JSON :node должен быть равен числу :number</target>
            </trans-unit>
            <trans-unit id="the-json-node-should-have-n-elements">
                <source>the JSON node :node should have :count element(s)</source>
                <target>узел JSON :node должен содержать :count элемент(а)(ов)</target>
            </trans-unit>
            <trans-unit id="the-json-node-should-contain-text">
                <source>the JSON node :node should contain :text</source>
                <target>узел JSON :node должен содержать :text</target>
            </trans-unit>
            <trans-unit id="the-json-nodes-should-contain">
                <source>the JSON nodes should contain:</source>
                <target>узлы JSON должны содержать:</target>
            </trans-unit>
            <trans-unit id="the-json-node-should-not-contain">
                <source>the JSON node :node should not contain :text</source>
                <target>узел JSON :node не должен содержать :text</target>
            </trans-unit>
            <trans-unit id="the-json-nodes-should-not-contain">
                <source>the JSON nodes should not contain:</source>
                <target>узлы JSON не должны содержать:</target>
            </trans-unit>
            <trans-unit id="the-json-node-should-exist">
                <source>the JSON node :name should exist</source>
                <target>узел JSON :name должен существовать</target>
            </trans-unit>
            <trans-unit id="the-json-node-should-not-exists">
                <source>the JSON node :name should not exist</source>
                <target>узел JSON :name не должен существовать</target>
            </trans-unit>
            <trans-unit id="the-json-should-be-valid-according-to-this-schema">
                <source>the JSON should be valid according to this schema:</source>
                <target>JSON должен соответствовать следующей схеме:</target>
            </trans-unit>
            <trans-unit id="the-json-should-be-invalid-according-to-this-schema">
                <source>the JSON should be invalid according to this schema:</source>
                <target>JSON не должен соответствовать следующей схеме:</target>
            </trans-unit>
            <trans-unit id="the-json-should-be-valid-according-to-the-schema">
                <source>the JSON should be valid according to the schema :filename</source>
                <target>JSON должен соответствовать схеме :filename</target>
            </trans-unit>
            <trans-unit id="the-json-should-be-invalid-according-to-the-schema">
                <source>the JSON should be invalid according to the schema :filename</source>
                <target>JSON не должен соответствовать схеме :filename</target>
            </trans-unit>
            <trans-unit id="the-json-should-be-eqal-to">
                <source>the JSON should be equal to:</source>
                <target>JSON должен быть равен:</target>
            </trans-unit>
            <trans-unit id="print-last-json-response">
                <source>print last JSON response</source>
                <target>выведи последний JSON ответ</target>
            </trans-unit>

            <!-- RestContext.php -->
            <trans-unit id="i-send-a-request-to">
                <source>I send a :method request to :url</source>
                <target>я отправляю :method запрос на :url</target>
            </trans-unit>
            <trans-unit id="i-send-a-request-on-with-parameters">
                <source>I send a :method request to :url with parameters:</source>
                <target>я отправляю :method запрос на :url с параметрами:</target>
            </trans-unit>
            <trans-unit id="i-send-a-request-on-with-body">
                <source>I send a :method request to :url with body:</source>
                <target>я отправляю :method запрос на :url с телом:</target>
            </trans-unit>
            <trans-unit id="the-response-should-be-equal-to">
                <source>the response should be equal to</source>
                <target>ответ должен быть</target>
            </trans-unit>
            <trans-unit id="the-response-should-be-empty">
                <source>the response should be empty</source>
                <target>ответ должен быть пустым</target>
            </trans-unit>
            <trans-unit id="the-header-should-be-equal-to">
                <source>the header :name should be equal to :value</source>
                <target>заголовок :name должен быть равен :value</target>
            </trans-unit>
            <trans-unit id="the-header-should-not-be-equal-to">
                <source>the header :name should not be equal to :value</source>
                <target>заголовок :name не должен быть равен :value</target>
            </trans-unit>
            <trans-unit id="i-add-header-equal-to">
                <source>I add :name header equal to :value</source>
                <target>я добавляю заголовок :name со значением :value</target>
            </trans-unit>
            <trans-unit id="the-header-should-be-contains">
                <source>the header :name should contain :value</source>
                <target>заголовок :name должен содержать :value</target>
            </trans-unit>
            <trans-unit id="the-header-should-not-contain">
                <source>the header :name should not contain :value</source>
                <target>заголовок :name не должен содержать :value</target>
            </trans-unit>
            <trans-unit id="the-header-should-not-exist">
                <source>the header :name should not exist</source>
                <target>заголовок :name не должен существовать</target>
            </trans-unit>
            <trans-unit id="the-response-should-be-encoded-in">
                <source>the response should be encoded in :encoding</source>
                <target>ответ должен быть закодирован :encoding</target>
            </trans-unit>
            <trans-unit id="the-response-should-expire-in-the-future">
                <source>the response should expire in the future</source>
                <target>ответ должен истекать в будущем</target>
            </trans-unit>
            <trans-unit id="print-last-response-headers">
                <source>print last response headers</source>
                <target>выведи заголовки последнего ответа</target>
            </trans-unit>
            <trans-unit id="print-the-corresponding-curl-command">
                <source>print the corresponding curl command</source>
                <target>выведи соответствующую команду curl</target>
            </trans-unit>

            <!-- TableContext.php -->
            <trans-unit id="the-columns-schema-of-the-table-should-match">
                <source>the columns schema of the :table table should match:</source>
                <target>схема столбцов таблицы :table должна соответствовать:</target>
            </trans-unit>
            <trans-unit id="i-should-ess-n-columns-in-the-tables">
                <source>(I )should see :count column(s) in the :table table</source>
                <target>(я )должен видеть :count столб(ец)(ца)(цов) в таблице :table</target>
            </trans-unit>
            <trans-unit id="i-should-see-n-rows-in-the-nth-tables">
                <source>(I )should see :count rows in the :index :table table</source>
                <target>(я )должен видеть :count строк(у)(и) в :index таблице :table</target>
            </trans-unit>
            <trans-unit id="i-should-see-n-rows-in-the-tables">
                <source>(I )should see :count row(s) in the :table table</source>
                <target>(я )должен видеть :count строк(у)(и) в таблице :table</target>
            </trans-unit>
            <trans-unit id="the-data-in-the-nth-row-of-the-table-should-match">
                <source>the data in the :index row of the :table table should match:</source>
                <target>данные в(о) :index строке таблицы :table должны соответствовать:</target>
            </trans-unit>
            <trans-unit id="the-nth-column-of-the-nth-row-in-the-table-should-contain">
                <source>the :colIndex column of the :rowIndex row in the :table table should contain :text</source>
                <target>:colIndex столбец :rowIndex строки в таблице :table должен содержать :text</target>
            </trans-unit>

            <!-- DebugContext.php -->
            <trans-unit id="i-put-a-breakpoint">
                <source>(I )put a breakpoint</source>
                <target>(я )ставлю паузу</target>
            </trans-unit>
            <trans-unit id="i-save-a-screenshot-in">
                <source>I save a screenshot in :filename</source>
                <target>я сохраняю скриншот в :filename</target>
            </trans-unit>

            <!-- XmlContext.php -->
            <trans-unit id="the-xml-should-not-use-the-namespace">
                <source>the XML should not use the namespace :namespace</source>
                <target>XML не должен использовать пространство им(е)(ё)н :namespace</target>
            </trans-unit>
            <trans-unit id="the-xml-should-use-the-namespace">
                <source>the XML should use the namespace :namespace</source>
                <target>XML должен использовать пространство им(е)(ё)н :namespace</target>
            </trans-unit>
            <trans-unit id="the-xml-feed-should-be-valid-accoriding-to-its-dtd">
                <source>the XML feed should be valid according to its DTD</source>
                <target>XML должен соответствовать его DTD</target>
            </trans-unit>
            <trans-unit id="the-xml-feed-should-be-valid-according-to-the-xsd">
                <source>the XML feed should be valid according to the XSD :filename</source>
                <target>XML должен соответствовать XSD :filename</target>
            </trans-unit>
            <trans-unit id="the-xml-feed-should-be-valid-according-to-this-xsd">
                <source>the XML feed should be valid according to this XSD:</source>
                <target>XML должен соответствовать следующему XSD:</target>
            </trans-unit>
            <trans-unit id="the-xml-feed-should-be-valid-according-to-the-relax-ng">
                <source>the XML feed should be valid according to the relax NG schema :filename</source>
                <target>XML должен соответствовать relax NG схеме :filename</target>
            </trans-unit>
            <trans-unit id="the-xml-feed-should-be-valid-according-to-this-relax-ng">
                <source>the XML feed should be valid according to this relax NG schema:</source>
                <target>XML должен соответствовать следующей relax NG схеме:</target>
            </trans-unit>
            <trans-unit id="the-atom-feed-should-be-valid">
                <source>the atom feed should be valid</source>
                <target>atom должен быть валидным</target>
            </trans-unit>
            <trans-unit id="the-rss2-feed-should-be-valid">
                <source>the RSS2 feed should be valid</source>
                <target>RSS2 должен быть валидным</target>
            </trans-unit>
            <trans-unit id="print-last-xml-response">
                <source>print last XML response</source>
                <target>выведи последний XML ответ</target>
            </trans-unit>
            <trans-unit id="the-xml-attribute-on-element-should-be-equal-to">
                <source>the XML attribute :attribute on element :element should be equal to :text</source>
                <target>XML атрибут :attribute у элемента :element должен быть равен :text</target>
            </trans-unit>
            <trans-unit id="the-xml-attribute-on-element-should-not-be-equal-to">
                <source>the XML attribute :attribute on element :element should not be equal to :text</source>
                <target>XML атрибут :attribute у элемента :element не должен быть равен :text</target>
            </trans-unit>
            <trans-unit id="the-xml-attribute-on-element-should-exists">
                <source>the XML attribute :attribute on element :element should exist(s)</source>
                <target>XML атрибут :attribute у элемента :element должен существовать</target>
            </trans-unit>
            <trans-unit id="the-xml-attribute-on-element-should-not-exists">
                <source>the XML attribute :attribute on element :element should not exist(s)</source>
                <target>XML атрибут :attribute у элемента :element не должен существовать</target>
            </trans-unit>
            <trans-unit id="the-xml-element-should-be-equal-to">
                <source>the XML element :element should be equal to :text</source>
                <target>XML элемент :element должен быть равен :text</target>
            </trans-unit>
            <trans-unit id="the-xml-element-should-not-be-equal-to">
                <source>the XML element :element should not be equal to :text</source>
                <target>XML элемент :element не должен быть равен :text</target>
            </trans-unit>
            <trans-unit id="the-xml-element-should-contain">
                <source>the XML element :element should contain :text</source>
                <target>XML элемент :element должен содержать :text</target>
            </trans-unit>
            <trans-unit id="the-xml-element-should-not-contain">
                <source>the XML element :element should not contain :text</source>
                <target>XML элемент :element не должен содержать :text</target>
            </trans-unit>
            <trans-unit id="the-xml-element-should-exists">
                <source>the XML element :element should exist(s)</source>
                <target>XML элемент :element должен существовать</target>
            </trans-unit>
            <trans-unit id="the-xml-element-should-not-exists">
                <source>the XML element :element should not exist(s)</source>
                <target>XML элемент :element не должен существовать</target>
            </trans-unit>
            <trans-unit id="the-xml-element-should-have-elements">
                <source>the XML element :element should have :count element(s)</source>
                <target>XML элемент :element должен содержать :count элемент(а)(ов)</target>
            </trans-unit>
            <trans-unit id="the-response-should-be-in-xml">
                <source>the response should be in XML</source>
                <target>ответ должен быть в XML</target>
            </trans-unit>
            <trans-unit id="the-response-should-not-be-in-xml">
                <source>the response should not be in XML</source>
                <target>ответ не должен быть в XML</target>
            </trans-unit>
        </body>
    </file>
</xliff>
